server {
    server_name speakeasy.health www.speakeasy.health;

    # Increased timeouts for WebSocket connections
    proxy_read_timeout 3600;
    proxy_connect_timeout 3600;
    proxy_send_timeout 3600;

    # Frontend - Next.js application (port 3000)
    # Handles all page routes, static assets, etc.
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # WebSocket Server - Socket.IO (port 3001)
    # CRITICAL: This location block is required for WebSocket connections!
    location /socket.io/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # WebSocket specific settings
        proxy_buffering off;
        proxy_redirect off;
    }

    # Backend API routes (Express server on port 3001)
    # The trailing slash in proxy_pass strips /api/ from the path
    # Example: /api/conversations -> http://localhost:3001/conversations
    location /api/ {
        proxy_pass http://localhost:3001/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/speakeasy.health/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/speakeasy.health/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.speakeasy.health) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = speakeasy.health) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name speakeasy.health www.speakeasy.health;
    return 404; # managed by Certbot
}
